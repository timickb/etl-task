version: "3.8"

services:
  postgres:
    image: postgres:14
    container_name: postgres
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - airflow_net

  mongo:
    image: mongo:5
    container_name: mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    restart: unless-stopped
    networks:
      - airflow_net

  airflow:
    image: apache/airflow:2.5.0
    container_name: airflow
    depends_on:
      - postgres
      - mongo
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
      AIRFLOW__CORE__FERNET_KEY: 'uHI9NsC2os1ht98c_5rgI1gKgRS4EF0FEfDxBWR9nDg='
      AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'False'
      AIRFLOW__CORE__LOAD_EXAMPLES: 'False'
      AIRFLOW_UID: '50000'
    networks:
      - airflow_net

    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins

    command: >
      bash -c "airflow db init && airflow users create --username admin --password admin --firstname Admin --lastname User --role Admin --email admin@example.com && (airflow scheduler &) && airflow webserver"
    ports:
      - "8080:8080"
    restart: unless-stopped
  
  data-generator:
    image: python:3.12-slim
    container_name: data-generator
    restart: on-failure
    depends_on:
      - postgres
      - mongo
    networks:
      - airflow_net
    volumes:
      - ./generator:/app/generator
    command: >
      bash -c "
        pip install --no-cache-dir psycopg2-binary faker pymongo &&
        python /app/generator/generator.py
      "

volumes:
  postgres_data:
  mongo_data:

networks:
  airflow_net:
